//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace IRISA.CommunicationCenter.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IccEvent> IccEvents1
        {
            get
            {
                if ((_IccEvents1 == null))
                {
                    _IccEvents1 = base.CreateObjectSet<IccEvent>("IccEvents1");
                }
                return _IccEvents1;
            }
        }
        private ObjectSet<IccEvent> _IccEvents1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IccTransfer> IccTransfers
        {
            get
            {
                if ((_IccTransfers == null))
                {
                    _IccTransfers = base.CreateObjectSet<IccTransfer>("IccTransfers");
                }
                return _IccTransfers;
            }
        }
        private ObjectSet<IccTransfer> _IccTransfers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IccEvents1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIccEvents1(IccEvent iccEvent)
        {
            base.AddObject("IccEvents1", iccEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IccTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIccTransfers(IccTransfer iccTransfer)
        {
            base.AddObject("IccTransfers", iccTransfer);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="IccEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IccEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IccEvent object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tIME">Initial value of the TIME property.</param>
        /// <param name="tYPE">Initial value of the TYPE property.</param>
        /// <param name="tEXT">Initial value of the TEXT property.</param>
        public static IccEvent CreateIccEvent(global::System.Int64 id, global::System.DateTime tIME, global::System.String tYPE, global::System.String tEXT)
        {
            IccEvent iccEvent = new IccEvent();
            iccEvent.ID = id;
            iccEvent.TIME = tIME;
            iccEvent.TYPE = tYPE;
            iccEvent.TEXT = tEXT;
            return iccEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TIME
        {
            get
            {
                return _TIME;
            }
            set
            {
                OnTIMEChanging(value);
                ReportPropertyChanging("TIME");
                _TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TIME");
                OnTIMEChanged();
            }
        }
        private global::System.DateTime _TIME;
        partial void OnTIMEChanging(global::System.DateTime value);
        partial void OnTIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                OnTYPEChanging(value);
                ReportPropertyChanging("TYPE");
                _TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TYPE");
                OnTYPEChanged();
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TEXT
        {
            get
            {
                return _TEXT;
            }
            set
            {
                OnTEXTChanging(value);
                ReportPropertyChanging("TEXT");
                _TEXT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TEXT");
                OnTEXTChanged();
            }
        }
        private global::System.String _TEXT;
        partial void OnTEXTChanging(global::System.String value);
        partial void OnTEXTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STACK_TRACE
        {
            get
            {
                return _STACK_TRACE;
            }
            set
            {
                OnSTACK_TRACEChanging(value);
                ReportPropertyChanging("STACK_TRACE");
                _STACK_TRACE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STACK_TRACE");
                OnSTACK_TRACEChanged();
            }
        }
        private global::System.String _STACK_TRACE;
        partial void OnSTACK_TRACEChanging(global::System.String value);
        partial void OnSTACK_TRACEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="IccTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IccTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IccTransfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sENT">Initial value of the SENT property.</param>
        /// <param name="dROPPED">Initial value of the DROPPED property.</param>
        /// <param name="sEND_TIME">Initial value of the SEND_TIME property.</param>
        public static IccTransfer CreateIccTransfer(global::System.Int64 id, global::System.Boolean sENT, global::System.Boolean dROPPED, global::System.DateTime sEND_TIME)
        {
            IccTransfer iccTransfer = new IccTransfer();
            iccTransfer.ID = id;
            iccTransfer.SENT = sENT;
            iccTransfer.DROPPED = dROPPED;
            iccTransfer.SEND_TIME = sEND_TIME;
            return iccTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SOURCE
        {
            get
            {
                return _SOURCE;
            }
            set
            {
                OnSOURCEChanging(value);
                ReportPropertyChanging("SOURCE");
                _SOURCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SOURCE");
                OnSOURCEChanged();
            }
        }
        private global::System.String _SOURCE;
        partial void OnSOURCEChanging(global::System.String value);
        partial void OnSOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESTINATION
        {
            get
            {
                return _DESTINATION;
            }
            set
            {
                OnDESTINATIONChanging(value);
                ReportPropertyChanging("DESTINATION");
                _DESTINATION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESTINATION");
                OnDESTINATIONChanged();
            }
        }
        private global::System.String _DESTINATION;
        partial void OnDESTINATIONChanging(global::System.String value);
        partial void OnDESTINATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TELEGRAM_ID
        {
            get
            {
                return _TELEGRAM_ID;
            }
            set
            {
                OnTELEGRAM_IDChanging(value);
                ReportPropertyChanging("TELEGRAM_ID");
                _TELEGRAM_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TELEGRAM_ID");
                OnTELEGRAM_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _TELEGRAM_ID;
        partial void OnTELEGRAM_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTELEGRAM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SENT
        {
            get
            {
                return _SENT;
            }
            set
            {
                OnSENTChanging(value);
                ReportPropertyChanging("SENT");
                _SENT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SENT");
                OnSENTChanged();
            }
        }
        private global::System.Boolean _SENT;
        partial void OnSENTChanging(global::System.Boolean value);
        partial void OnSENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DROPPED
        {
            get
            {
                return _DROPPED;
            }
            set
            {
                OnDROPPEDChanging(value);
                ReportPropertyChanging("DROPPED");
                _DROPPED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DROPPED");
                OnDROPPEDChanged();
            }
        }
        private global::System.Boolean _DROPPED;
        partial void OnDROPPEDChanging(global::System.Boolean value);
        partial void OnDROPPEDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DROP_REASON
        {
            get
            {
                return _DROP_REASON;
            }
            set
            {
                OnDROP_REASONChanging(value);
                ReportPropertyChanging("DROP_REASON");
                _DROP_REASON = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DROP_REASON");
                OnDROP_REASONChanged();
            }
        }
        private global::System.String _DROP_REASON;
        partial void OnDROP_REASONChanging(global::System.String value);
        partial void OnDROP_REASONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SEND_TIME
        {
            get
            {
                return _SEND_TIME;
            }
            set
            {
                OnSEND_TIMEChanging(value);
                ReportPropertyChanging("SEND_TIME");
                _SEND_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SEND_TIME");
                OnSEND_TIMEChanged();
            }
        }
        private global::System.DateTime _SEND_TIME;
        partial void OnSEND_TIMEChanging(global::System.DateTime value);
        partial void OnSEND_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RECEIVE_TIME
        {
            get
            {
                return _RECEIVE_TIME;
            }
            set
            {
                OnRECEIVE_TIMEChanging(value);
                ReportPropertyChanging("RECEIVE_TIME");
                _RECEIVE_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RECEIVE_TIME");
                OnRECEIVE_TIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _RECEIVE_TIME;
        partial void OnRECEIVE_TIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnRECEIVE_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BODY
        {
            get
            {
                return _BODY;
            }
            set
            {
                OnBODYChanging(value);
                ReportPropertyChanging("BODY");
                _BODY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BODY");
                OnBODYChanged();
            }
        }
        private global::System.String _BODY;
        partial void OnBODYChanging(global::System.String value);
        partial void OnBODYChanged();

        #endregion

    
    }

    #endregion

    
}
